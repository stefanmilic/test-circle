# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1
orbs:
  node: circleci/node@1.1.6
  sonarcloud: sonarsource/sonarcloud@1.0.0
executors:
  python38:
    environment:
      LANG: C.UTF-8
    docker:
      - image: circleci/python:3.8

jobs:
  deepcode:
    parameters:
      wd:
        type: string
        default: ./${CIRCLE_PROJECT_REPONAME}
      files:
        type: string
        default: "."
      severity:
        description: "Minimum severity level."
        type: enum
        enum: ["info", "warning", "critical"]
        default: "info"
    executor: python38
    steps:
      - checkout
      - run:
          name: Install DeepCode CLI
          command: |
            cd <<parameters.wd>>
            python3 -m venv ${HOME}/.venv/
            . ~/.venv/bin/activate
            echo "source ${HOME}/.venv/bin/activate" >> $BASH_ENV
            pip install deepcode
      - run:
          name: Run DeepCode CLI
          command: |
            cd <<parameters.wd>>
            deepcode analyze -sev critical -p <<parameters.files>> | tee results.json

  sonarCloud:
    docker:
      - image: "node:latest"
    steps:
      - checkout
      - sonarcloud/scan

  build-and-test:
    docker:
      - image: circleci/node:12

    working_directory: ~/repo

    environment:
      BASH_ENV: bash_env

    steps:
      - checkout
      # - setup_remote_docker:
      #     docker_layer_caching: true

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package-lock.json" }}
      - run:
          name: Install dependencies
          command: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package-lock.json" }}

      - run:
          name: Unit tests
          command: npm test

  deploy:
    docker:
      - image: circleci/node:12
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Install python
          command: |
            sudo apt-get update && sudo apt-get install python
      # - run:
      #     name: Install pip
      #     command: curl -O https://bootstrap.pypa.io/get-pip.py && sudo python get-pip.py
      - run:
          name: Install aws cli
          command: sudo pip install -q awscli --upgrade
      - run:
          name: Install dependencies
          command: npm install
      - run:
          name: Set AWS credentials
          command: ./node_modules/.bin/sls config credentials --provider aws --key $AWS_ACCESS_KEY_ID --secret $AWS_SECRET_ACCESS_KEY --overwrite
      - run:
          name: Deploy on AWS
          command: ./deploy.sh "$CIRCLE_BRANCH"

workflows:
  version: 2
  dev-build:
    jobs:
      - deepcode:
          filters:
            branches:
              ignore: /(^develop$)|(^master$)/
          files: "."
          wd: "."
      - sonarCloud:
          filters:
            branches:
              ignore: /(^develop$)|(^master$)/
          context: sonarcloud
      - build-and-test:
          filters:
            branches:
              ignore: /(^develop$)|(^master$)/
  dev-deploy:
    jobs:
      # - deepcode:
      #     filters:
      #       branches:
      #         only: /develop/
      #     files: "."
      #     wd: "."
      # - sonarCloud:
      #     filters:
      #       branches:
      #         only: /develop/
      #     context: sonarcloud
      # - build-and-test:
      #     filters:
      #       branches:
      #         only: /develop/
      - deploy

  prod-deploy:
    jobs:
      - deepcode:
          filters:
            branches:
              only: /master/
          files: "."
          wd: "."
      - build-and-test:
          filters:
            branches:
              only: /master/
      - deployment-approval:
          type: approval
          requires:
            - deepcode
            - build-and-test
      - deploy:
          requires:
            - deployment-approval
